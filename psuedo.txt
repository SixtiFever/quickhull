CALL quickhull(S <- Set of input vertices):
    IF length of S is < 3, RETURN S
    LET convex_hull be an empty list
    LET p1,p2 be the starting hull vertices returned by CALLING find_initial_lines(S)
    APPEND hull points p1,p2 to convex_hull list
    LET s1,s2 be segments about hyperplane p1,p2 established by CALLING seg_divide(S, p1, p2)
    CALL find_hull on s1 and s2 and their associated line start and end coordinates.
    RETURN convex_hull 

CALL find_hull(S <- Segment, A <- Line start vertex, B <- Line end vertex):
    IF length of S is < 3, RETURN S
    LET C be the calculated extreme vertex from AB, forming a triangle ACB
    LET hull_points be a list to store convex hull vertices, and append C
    LET o1,i1 be the outer an inner segments about AC via CALLING seg_divide(S, A, C)
    LEt o2,i2 be the outer an inner segments about BC via CALLING seg_divide(S, C, B)
    IF either segment contains only 1 vertex V, append V to hull_points
    CALL find_hull on outer segments such that find_hull(o1, A, C) and find_hull(o2, C, B)
    RETURN hull_points






    